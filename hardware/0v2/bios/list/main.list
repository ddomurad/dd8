Line  Loc   Code         Source
    1                   .def (
    2                     ENTER   := 0xf000
    3                     RST_VEC := 0xfffc
    4                   
    5                     UART_ADDR := 0x8000
    6                     UART_STS  := UART_ADDR + 0x01
    7                     UART_CMD  := UART_ADDR + 0x02
    8                     UART_CTR  := UART_ADDR + 0x03
    9                   
   10                     VARIABLES := 0x0200
   11                   )
   12                   
   13                   ; .org 0x0000
   14                   ; jmp 0xf000
   15                   
   16                   .org VARIABLES
   17                   DATA_BUFFER: .byte 0xff 
   18                   DATA_POINTER: .byte 
   19                   LAST_CHAR: .byte 
   20                   
   21                   .org ENTER 
   22                   initialize_uart:
   23  f000  a900        ldai 0x00 
   24  f002  8d0180      sta UART_STS    ; status register, soft reset 
   25                   
   26  f005  a91e        ldai 0b00011110 ; 1 stop bit, 8 bits, 9600 baud
   27  f007  8d0380      sta UART_CTR    ; ctrl reg
   28                   
   29  f00a  a90b        ldai 0b00001011 ; DTR = 0;
   30  f00c  8d0280      sta UART_CMD    ; cmd register
   31                   
   32                   init_ram:
   33  f00f  9cff02      stz DATA_POINTER
   34                   ; init_test_ram:
   35                   ;   ldxi 0x00
   36                   ;   ldai 0x64
   37                   ;   sta DATA_BUFFER,x
   38                   ;   inx
   39                   ;   sta DATA_BUFFER,x
   40                   ;   inx
   41                   ;   sta DATA_BUFFER,x
   42                   ;   inx
   43                   ;   sta DATA_BUFFER,x
   44                   ;   inx
   45                   ;   ldai 0x0a 
   46                   ;   sta DATA_BUFFER,x
   47                   ;   ldai 0x0a
   48                   ;   sta LAST_CHAR 
   49                   ;   ldai 0x05
   50                   ;   sta DATA_POINTER
   51                   
   52                   loop:
   53  f012  2026f0      jsr read_serial_st
   54  f015  a90a        ldai 0x0a ; new line 
   55  f017  38          sec
   56  f018  ed0003      sbc  LAST_CHAR
   57  f01b  f003        beq call_send
   58  f01d  4c12f0    jmp loop
   59                   call_send:
   60  f020  203ff0      jsr send_serial_st
   61  f023  4c12f0    jmp loop
   62                   
   63                   read_serial_st:
   64  f026  a908        ldai 0x08 ; uart receive bit
   65  f028  2d0180      and UART_STS
   66  f02b  f011        beq read_serial_ret ; if not set just return 
   67  f02d  18          clc 
   68  f02e  ad0080      lda UART_ADDR 
   69  f031  8d0003      sta LAST_CHAR
   70  f034  aeff02      ldx DATA_POINTER 
   71  f037  9d0002      sta DATA_BUFFER, x
   72  f03a  e8          inx 
   73  f03b  8eff02      stx DATA_POINTER
   74                   read_serial_ret:
   75  f03e  60        rts
   76                   
   77                   send_serial_st:
   78  f03f  a200        ldxi 0x00 
   79                   send_serial_st_loop: 
   80  f041  8a          txa 
   81  f042  1a          inc a
   82  f043  1a          inc a
   83  f044  18          clc
   84  f045  edff02      sbc DATA_POINTER
   85  f048  f00a        beq send_serial_ret
   86  f04a  bd0002      lda DATA_BUFFER, x
   87  f04d  8d0080      sta UART_ADDR
   88  f050  e8          inx 
   89  f051  4c41f0      jmp send_serial_st_loop
   90                   send_serial_ret:
   91  f054  60        rts
   92                   
   93                   delay_sr:
   94  f055  60        rts
   95                   
   96                   .org RST_VEC
   97  fffc  00f0      .db ENTER.l, ENTER.h
   98                   
   99                   
  100                   
